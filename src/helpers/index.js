// Modifies the key-value pairs of a provided object based on the return value of the provided function.
export const mapObj = (fn, obj) => {
  const arr = Object.entries(obj).map(entry => fn(entry))
  const result = Object.fromEntries(arr)

  return result
}

// Creates an object with the same keys as obj with new values generated by running each key from obj thru the provided function.
export const mapValues = (fn, obj) => {
  const result = {}

  Object.keys(obj).forEach(key => {
    result[key] = fn(obj[key], key, obj)
  })

  return result
}

// Returns true if the URL is internal, false otherwise.
export const isInternal = string =>
  typeof string === 'string' && /^\/(?!\/)/.test(string)

// Returns the value from the provided object at the provided path. If the value doesn't exist, return null or the default value. ES6 implementation of lodash's get. Used to safely retrieve values without crashing.
export const get = (path, obj) =>
  path.split('.').reduce((a, c) => (a && a[c] ? a[c] : null), obj)
